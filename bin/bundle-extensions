#!/usr/bin/env python
"""Copy bundle extension files to the client/app/extension directory"""
import os
from pathlib2 import Path
from shutil import copy

from redash import create_app, extensions

# Make a directory for extensions and set it as an environment variable
# to be picked up by webpack.
extensions_relative_path = Path('client', 'app', 'extensions')
extensions_directory = Path(__file__).parent.parent / extensions_relative_path

if not extensions_directory.exists():
    extensions_directory.mkdir()
os.environ["EXTENSIONS_DIRECTORY"] = str(extensions_relative_path)

# We need the app here for logging and to make sure the bundles have loaded.
app = create_app()

bundles = extensions.bundles.items()
if bundles:
    app.logger.info('Number of extension bundles found: %s', len(bundles))
else:
    app.logger.info('No extension bundles found.')

for bundle_name, paths in extensions.bundles.items():
    # Shortcut in case not paths were found for the bundle
    if not paths:
        app.logger.info('No paths found for bundle "%s".', bundle_name)
        continue

    # The destination for the bundle files with the entry point name as the subdirectory
    destination = Path(extensions_directory, bundle_name)
    if not destination.exists():
        destination.mkdir()

    # Copy the bundle directory from the module to its destination.
    app.logger.info('Copying "%s" bundle to %s:', bundle_name, destination.resolve())
    for src_path in paths:
        dest_path = destination / src_path.name
        app.logger.info(" - {} -> {}".format(src_path, dest_path))
        copy(str(src_path), str(dest_path))
